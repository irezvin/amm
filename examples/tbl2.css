html {
    font-family: sans-serif;
}

html {
    background-color: black;
    color: lightgray;
}

table.data input {
    color: white;
}

table.data, table.data * {
    box-sizing: border-box;
}   

table.data {
    font-size: 0.9em;
    border-collapse: collapse;
}

table.data th, table.data td {
    padding: 0;
    border: 1px solid silver;
}

table.data div.cellContent {
    padding: .5em;
    max-width: 100%;
    max-height: 100%;
    overflow: hidden;
}

table.data th, table.data td {
    overflow: hidden;
}

table.data th {    
    /* white-space: nowrap; */
}

.data, .cnt {
    margin: 0 auto;
}

h1 {
    text-align: center;
}
tr.hl, tr.hl input {
    background-color: greenyellow;
    color: black;
}
td.hl0 div.value {
    background-color: darkred;
    color: pink;
    padding: 0 2px;
    border-radius: 2px;
    display: inline-block;
}
td.hl1 {
    font-weight: bold;
}
td.hl2 {
    color: darkgreen;
}

.data input[type=text] {
    background: none;
    margin: -0.5em;
    padding: 0.5em;
    border: none;
    width: calc(100% + 1em);
    height: calc(100% + 1em);
}

.activeRow > *:first-child {
    border-left-color: orangered;
}

.activeRow > *:first-child .cellContent {
    border-left: 2px solid orangered;
    padding-left: calc(.5em - 2px);
}

.data thead th.activeColumn {
    border-top-color: orangered;
}

.data thead th.activeColumn .cellContent {
    border-top: 2px solid orangered;
    padding-top: calc(.5em - 2px);
}

.data td.active .cellContent, .data th.active .cellContent {
    border: 2px solid orangered;
    padding: calc(.5em - 2px);
}

th {
    position: relative;
}

th .resizeHandle {
    display: none;
}

th.resizableColumn:hover .resizeHandleVertical, th.resizableRow:hover .resizeHandleHorizontal, 
th.isResizing .resizeHandleVertical, tr.isResizing th .resizeHandleHorizontal {
    display: block!important;
}

th .resizeHandleVertical {
    width: 6px;
}

th .resizeHandleHorizontal {
    height: 6px;
}


th .resizeHandle:hover, 
th.isResizing .resizeHandleVertical,
tr.isResizing .resizeHandleHorizontal
{
    background-color: skyblue;
}

th .resizeHandleVertical {
    cursor: col-resize;
    position: absolute;
    right: 0px;
    top: 0;
    height: 100%;
}

th .resizeHandleHorizontal {
    cursor: row-resize;
    position: absolute;
    bottom: 0px;
    width: 100%;
    left: 0;
    z-index: 999;
}


th.draggableRow.active, th.draggableColumn.active > div:first-child {
    cursor: grab;
}

.dragShadow {
    position: absolute;
    z-index: 999999;
    background-color: rgba(255,255,255,0.5);
    pointer-events: none;
}

.data th.dragDestBefore, .data td.dragDestBefore {
    border-left: 2px solid lightskyblue;
}


.data th.dragDestAfter, .data td.dragDestAfter {
    border-right: 2px solid lightskyblue;
}


.data tr.dragDestBefore td, .data tr.dragDestBefore th {
    border-top: 2px solid lightskyblue;
}


.data tr.dragDestAfter td, .data tr.dragDestAfter th {
    border-bottom: 2px solid lightskyblue;
}

    table.data
,   table.data th
,   table.data td
,   table.data .cellContent
,   table.data .cellContent .cellItems 
{
    height: 100%;
} 



