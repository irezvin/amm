2016-11-08

    Interfaces list

    lockable: locked
    editor: value, readOnly, enabled
    focusable: focused

    visual
    withClasses

2016-11-10

    Еще одной проблемой является то, что адаптер подключается
    не к самому элементу - владельцу trait'а - а к trait'у.
    
    ?   К чему подключать адаптер
    
        а   к элементам, а сами элементы расширять при помощи trait'ов
        б   как это происходит сейчас - адаптеры подклюать к trait'ам
    
        !   Определимся потом
    
    ?   Все ли элементы являются Mixin?
    
    ?!  Я запутался в классах
    
        Trait is ElementBound
        
        Adapter is ElementBound therefore Trait is Element
            *** we need ElementBound only for lazy association ***
            
        
        Trait -= needs =- to be withEvents, everything other is insignificant
            *** don't really need elementBound ***
        
        WTFery
        
                
        Обновление
        
        Сложный вариант
        
        -   Элемент поддерживает Traits и является Mixin'ом
        -   Traits являются элементами
        -   Если Trait реализует хоть один интерфейс, то он доступен по path
            /element/:interfaceName
        -   если несколько интерфейсов - то по нескольким путям
        -   Trait является одновременно Element и ElementBound,
            и его Path не такой, как обычно
        -   getByPath понимает интерфейсы (они начинаются с ":")
        -   адаптер, если мы пытаемся присоединить его к несовместимому элементу, 
            находит у элемента подходящий Trait (нужного класса)
        
        Но мне этот вариант кажется идиотским.
        
        Потому что получается, что у нас есть абсолютно тонкие элементы без всякого 
        смысла.    

        ...????....
        
        В идеале у нас должны быть traits, которые легко присоединять к элементам,
        тем самым расширяя их функциональность, и адаптеры, которые связаны с 
        *интерфейсами*, а не с traits.
        
        -= ...... =-
        
        Миллион вопросов.
        
