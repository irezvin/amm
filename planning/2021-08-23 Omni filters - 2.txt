2021-08-23 omni-filter: simplified records querying format

There are omni-filter implementations in

-   Javascript
-   PHP (with in-memory structures) 
-   SQL generated by PHP

Query args for manager:

s       - default full-text search criterion
f_foo   - regular filter, where 'foo' is name of filter 
          (mapper supports field-named filters by default)
o       - full definition for omni filter (should be JSON based, otherwise useless)
o_foo   - omni filter by field 'foo'

Omni filter:
    
Expression :=

    criterion | [ expression, expression ... ]

Criterion :=

    { fieldName: valueCriterion, field2: valueCriterion... } - AND by default, OR in $or expression
    { $or: expression }
    { $not: expression }
    
ValueCriterion := 

    value
    [value1, value2, value3] - OR (or "in") criterion
    { min: foo, max: bar } - range (both min and max are optional)
    [ {min: interval1min, max: interval1max}, value, {min: interval1min, max: interval2max}, value ] ] - combine intervals    
    { not: valueCriterion } - invert
    { and: [valueCriterion, valueCriterion] } - combine using and
    { rx: "/regExp/flags" } 
    { empty: true / false }
    { exists: true / false }
    
value := scalar | { value: anyValue } where anyValue is any allowed JSON value (used for escaping things like 'not: ' etc)

Url arg is interpreted as follows:

o_{field}=fieldCriterion

    fieldCriterion  :=  JSON | strVal
            strVal  :=  subVal [ ,subVal... ]
            subVal  :=  !crit | crit
              crit  :=  /regExp/flags | interval | value
          interval  :=  min.. | min..max | ..max    where min & max are values
             value  :=  arbitrary string w/o ",", "..", not beginning with "/" or "!"

scalar values that begin with '{', '[' or '"' are interpreted as JSON, 
scalar values in format /foo/[flags] are terated as RegExp,
others arent;
